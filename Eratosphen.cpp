// Решето Эратосфена
#include <iostream>
#include <clocale>

using namespace std;

int main()
{
	setlocale(LC_ALL, "RUS");
	int N, j, i;

	cout << "Введите число, до которого нужно найти простые числа: " <<	endl;
	cin >> N;

	int* arr = new int[N];		// создаем динамичский массив

	for (i = 0; i < N; i++)   // заполняем массив числами до введенного N в порядке возрастания
		arr[i] = i;

	arr[1] = 0; // обнуляем единицу

	for (i = 2; i < N; i++) {		// цикл реализует алгоритм Эратосфена
		if (arr[i] != 0) {		// проверяет, обнулилось ли число или нет
			j = i * 2;		// здесь находим самое близкое кратное перебираемому числу
			while (j < N) {		// в этом цикле находим все числа, кратные заданному числу...
				arr[j] = 0;		// ... и обнуляем их
				j += i;
			}
		}
	}
	j = 0;
	cout << "Простые числа: " << endl;		// выводим все ненулевые элементы: они и будут являться простыми числами
	for (int i = 0; i < N; i++) {
		if (arr[i] > 0) {
			j += 1;
			cout << arr[i] << "  ";
		}
		if (j == 10) {
			j = 0;
			cout << endl;
		}
	}

	delete[] arr;	// удаляем динамический массив
	return 0;
}
